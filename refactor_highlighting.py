#!/usr/bin/env python2.6 -ttt
# -*- coding: utf-8 -*-


"""

refactor_highlighting.py

Replace the <font>-tags generated by older versions of code2html with
CSS-style <span style="...">-tags.

Usage: refactor_highlighting.py <input-file> > <output-file>

(Input is read from the file that is passed as the only command-line
option, output is written to stdout.)


Written 2011 by Dr. W. Schroers <Wolfram.Schroers -at-Field-theory.org>
Published under the GPL, see the accompanying README-file(s) and
http://www.field-theory.org for details.

"""

from __future__ import print_function
import os, sys, re


# Read in the input file
if len(sys.argv) != 2:
    print("""Usage: refactor_highlighting.py <input-file> > <output-file>

(Input is read from the file that is passed as the only command-line
option, output is written to stdout.)""")
    raise SystemExit

fh = open(sys.argv[1], "r")
content = fh.readlines()
fh.close()


# Refactor the <font>, <b>, <strong>, <i>, and <u>-tags; these are
# replaced with the corresponding <span style="...">-tags.

# NOTE: It is in general good style in HTML-files to use CSS for
# presentations of syntax highlighting (as in this case for the source
# code), stylistic tags (like <b>, <i>, <u> etc.) for marking the
# presentation of content and semantic tags (like <strong>, <em> etc.)
# for denoting meaning in content. In this manner the tags are NOT
# identical, although they might be presented in the same way by
# common browsers!

for i in xrange(len(content)):
    newcont = re.sub(r'(font|FONT) color="',
                     r'span style="color:', content[i])
    newcont = re.sub(r'<span style="color:(?!#)(.*?)',
                     r'<span style="color:#\1', newcont)
    newcont = re.sub(r'<(i|I|em|EM)>',
                     r'<span style="font-style:italic">', newcont)
    newcont = re.sub(r'<(b|B|strong|STRONG)>',
                     r'<span style="font-weight:bold">', newcont)
    newcont = re.sub(r'<(u|U)>',
                     r'<span style="text-decoration:underline">', newcont)
    content[i] = re.sub(r'</(font|FONT|b|B|i|I|em|EM|strong|STRONG|u|U)>',
                        r'</span>', newcont)


# Print the file contents to stdout
for line in content:
    print(line, end='')
